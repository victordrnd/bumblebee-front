stages:
  - check
  - build
  - deploy

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      variables:
        IMAGE_TAG: "latest"
    - if: $CI_COMMIT_BRANCH != "master"
      variables:
        IMAGE_TAG: $CI_COMMIT_BRANCH

sonarqube-check:
  stage: check
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - develop


build_image:
  stage: build
  image: data61/magda-builder-docker:latest
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -t ${CI_REGISTRY}/${IMAGENAME}:${IMAGE_TAG} -f Dockerfile .
    - docker push ${CI_REGISTRY}/${IMAGENAME}:${IMAGE_TAG}
    - docker image rm ${CI_REGISTRY}/${IMAGENAME}:${IMAGE_TAG}
  only:
    - master

deploy:
  stage: deploy
  image: gitlab/dind:latest
  only:
    - "master"
  environment: production
  services:
    - docker:dind
  before_script:
    - mkdir -p ~/.ssh
    - echo "$BUMBLEBEE_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/private_key.pem
    - chmod -R 600 ~/.ssh/private_key.pem
    - eval "$(ssh-agent -s)"
  script:
    - scp -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i ~/.ssh/private_key.pem -r ./docker-compose.yml ubuntu@${DEPLOYMENT_SERVER_IP}:~/bumblebee-front.yml
    - ssh -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i ~/.ssh/private_key.pem ubuntu@$DEPLOYMENT_SERVER_IP "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; docker-compose -f bumblebee-front.yml pull; docker-compose -f bumblebee-front.yml up -d"

variables:
  IMAGENAME: 'bumblebee/bumblebee-front'
  DOCKER_DRIVER: overlay2